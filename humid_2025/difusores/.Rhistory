cb3d
cb3d <- plot_ly(data = cb, x = ~time, y = ~do, z = ~capOxigen,
type = "scatter3d",
mode = "lines",
line = list(
color = ~capOxigen,
colorscale = "Cividis",
width = 9,
showscale = TRUE
),
showlegend = FALSE) %>%
layout(
title = "Coarse bubble",
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Dissolved oxygen"),
zaxis = list(title = "Oxygenation capacity")
)
)
cb3d
fb3d <- plot_ly(data = fb, x = ~time, y = ~do, z = ~capOxigen,
type = "scatter3d",
mode = "lines",
line = list(
color = ~capOxigen,
colorscale = "Electric",
width = 9,
showscale = TRUE
),
showlegend = FALSE) %>%
layout(
title = "Fine bubble",
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Dissolved oxygen"),
zaxis = list(title = "Oxygenation capacity")
)
)
fb3d
# Combinar gráficos 3D de plotly en un solo gráfico
# Combinar gráficos 3D de plotly en un solo gráfico, uno al lado del otro
combined_plot <- subplot(
ecb3d, cb3d, fb3d,
nrows = 3,  # Una fila para que estén uno al lado del otro
margin = 0.02,  # Reducir el margen entre gráficos
shareX = FALSE,  # No compartir ejes X
shareY = FALSE   # No compartir ejes Y
)
# Mostrar el gráfico combinado
combined_plot
subplot(ecb3d, cb3d)
ecb3d <- plot_ly(data = ecb, x = ~time, y = ~do, z = ~capOxigen,
type = "scatter3d",
mode = "lines",
line = list(
color = ~capOxigen,
colorscale = "Viridis",
width = 9,
showscale = TRUE,
colorbar(
title = "Oxygenation capacity",
tickvals = c(0, 0.5, 1),
ticktext = c("0", "0.5", "1")
)
),
showlegend = TRUE) %>%
layout(
title = "Extra-coarse bubble",
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Dissolved oxygen"),
zaxis = list(title = "Oxygenation capacity")
)
)
cb3d <- plot_ly(data = cb, x = ~time, y = ~do, z = ~capOxigen,
type = "scatter3d",
mode = "lines",
line = list(
color = ~capOxigen,
colorscale = "Cividis",
width = 9,
showscale = TRUE
),
showlegend = FALSE) %>%
layout(
title = "Coarse bubble",
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Dissolved oxygen"),
zaxis = list(title = "Oxygenation capacity")
)
)
ecb3d <- plot_ly(data = ecb, x = ~time, y = ~do, z = ~capOxigen,
type = "scatter3d",
mode = "lines",
line = list(
color = ~capOxigen,
colorscale = "Viridis",
width = 9,
showscale = TRUE,
colorbar(
title = "Oxygenation capacity",
tickvals = c(0, 0.5, 1),
ticktext = c("0", "0.5", "1")
)
),
showlegend = TRUE) %>%
layout(
title = "Extra-coarse bubble",
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Dissolved oxygen"),
zaxis = list(title = "Oxygenation capacity")
)
)
libs <- c( "readxl", "tidyverse", "datapasta", "clipr", "this.path", "plotly")
for (lib in libs) {
library(lib, character.only = TRUE)
}
ecb3d <- plot_ly(data = ecb, x = ~time, y = ~do, z = ~capOxigen,
type = "scatter3d",
mode = "lines",
line = list(
color = ~capOxigen,
colorscale = "Viridis",
width = 9,
showscale = TRUE,
colorbar(
title = "Oxygenation capacity",
tickvals = c(0, 0.5, 1),
ticktext = c("0", "0.5", "1")
)
),
showlegend = TRUE) %>%
layout(
title = "Extra-coarse bubble",
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Dissolved oxygen"),
zaxis = list(title = "Oxygenation capacity")
)
)
ecb3d <- plot_ly(data = ecb, x = ~time, y = ~do, z = ~capOxigen,
type = "scatter3d",
mode = "lines",
line = list(
color = ~capOxigen,
colorscale = "Viridis",
width = 9,
showscale = TRUE,
colorbar = list(
title = list(
text = "Extra-coarse bubble",
side = "right"
),
x = -0.2,
y = 0.5,
len = 0.5
)
),
showlegend = FALSE) %>%
layout(
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Dissolved oxygen"),
zaxis = list(title = "Oxygenation capacity")
)
)
ecb3d
cb3d <- plot_ly(data = cb, x = ~time, y = ~do, z = ~capOxigen,
type = "scatter3d",
mode = "lines",
line = list(
color = ~capOxigen,
colorscale = "Cividis",
width = 9,
showscale = TRUE,
colorbar = list(
orientation = "h",
x = 0.5,
y = 1,
len = 0.5,
title = list(
text = "Coarse bubble",
side = "top"
)
)
),
showlegend = FALSE) %>%
layout(
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Dissolved oxygen"),
zaxis = list(title = "Oxygenation capacity")
)
)
cb3d
fb3d <- plot_ly(data = fb, x = ~time, y = ~do, z = ~capOxigen,
type = "scatter3d",
mode = "lines",
line = list(
color = ~capOxigen,
colorscale = "haline",
width = 9,
showscale = TRUE,
colorbar = list(
len = 0.5,
title = list(
text = "Fine bubble",
side = "right"
)
)
),
showlegend = FALSE) %>%
layout(
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Dissolved oxygen"),
zaxis = list(title = "Oxygenation capacity")
)
)
fb3d
combined_plot <- subplot(
ecb3d, cb3d, fb3d,
nrows = 3,  # Una fila para que estén uno al lado del otro
margin = 0.02,  # Reducir el margen entre gráficos
shareX = FALSE,  # No compartir ejes X
shareY = FALSE   # No compartir ejes Y
)
combined_plot
fb3d <- plot_ly(data = fb, x = ~time, y = ~do, z = ~capOxigen,
type = "scatter3d",
mode = "lines",
line = list(
color = ~capOxigen,
colorscale = "Hot",
width = 9,
showscale = TRUE,
colorbar = list(
len = 0.5,
title = list(
text = "Fine bubble",
side = "right"
)
)
),
showlegend = FALSE) %>%
layout(
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Dissolved oxygen"),
zaxis = list(title = "Oxygenation capacity")
)
)
combined_plot <- subplot(
ecb3d, cb3d, fb3d,
nrows = 3,  # Una fila para que estén uno al lado del otro
margin = 0.02,  # Reducir el margen entre gráficos
shareX = FALSE,  # No compartir ejes X
shareY = FALSE   # No compartir ejes Y
)
combined_plot
lib <- c("readxl", "dplyr", "plotly", "tidyverse")
for (lib in libs) {
library(lib, character.only = TRUE)
}
find_dir <- function(dir_name, start_path = getwd(), max_depth = 10) {
# Verificar y cargar fs
if (!requireNamespace("fs", quietly = TRUE)) {
install.packages("fs")
}
library(fs)
# PASO 1: Subir un nivel desde el directorio actual
parent_dir <- fs::path_dir(start_path)
# PASO 2: Encontrar el directorio más profundo desde ese nivel superior
deepest_dir <- parent_dir
max_depth_reached <- -1
explore_dirs <- function(path, depth = 0) {
if (depth >= max_depth) return()
if (depth > max_depth_reached) {
deepest_dir <<- path
max_depth_reached <<- depth
}
# Intentar listar subdirectorios
tryCatch({
subdirs <- fs::dir_ls(path, type = "directory", recurse = FALSE)
for (subdir in subdirs) {
explore_dirs(subdir, depth + 1)
}
}, error = function(e) {})
}
# Iniciar exploración desde el nivel superior
explore_dirs(parent_dir)
# PASO 3: Buscar hacia arriba desde el directorio más profundo
current <- deepest_dir
for (i in 1:max_depth) {
# Verificar si este directorio es el buscado
if (fs::path_file(current) == dir_name) {
return(current)
}
# Verificar si contiene el directorio buscado
target_path <- fs::path(current, dir_name)
if (fs::dir_exists(target_path)) {
return(target_path)
}
# Subir un nivel
parent <- fs::path_dir(current)
if (parent == current) break  # Ya llegamos a la raíz
current <- parent
}
return(NULL)  # No se encontró
}
setwd(find_dir("difusores"))
load("difDatos.RData")
View(difDatos)
View(difDatos)
ecb <- difDatos %>%
dplyr::filter(cat == "ecb") %>%
drop_na() %>%
dplyr::select(time, kla, oxCap)
cb <- difDatos %>%
dplyr::filter(cat == "cb") %>%
drop_na() %>%
dplyr::select(time, kla, oxCap)
fb <- difDatos %>%
dplyr::filter(cat == "fb") %>%
drop_na() %>%
dplyr::select(time, kla, oxCap)
ecb3d <- plot_ly(data = ecb, x = ~time, y = ~kla, z = ~oxCap,
type = "scatter3d",
mode = "lines",
line = list(
color = ~oxCap,
colorscale = "Viridis",
width = 9,
showscale = TRUE,
colorbar = list(
title = list(
text = "Extra-coarse bubble",
side = "right"
),
x = -0.2,
y = 0.5,
len = 0.5
)
),
showlegend = FALSE) %>%
layout(
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Mass transfer coefficient"),
zaxis = list(title = "Oxygenation capacity")
)
)
ecb3d
cb3d <- cb %>%
plot_ly(data = ., x = ~time, y = ~kla, z = ~oxCap,
type = "scatter3d",
mode = "lines",
line = list(
color = ~oxCap,
colorscale = "Cividis",
width = 9,
showscale = TRUE,
colorbar = list(
orientation = "h",
x = 0.5,
y = 1,
len = 0.5,
title = list(
text = "Coarse bubble",
side = "top"
)
)
),
showlegend = FALSE) %>%
layout(
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Mass transfer coefficient"),
zaxis = list(title = "Oxygenation capacity")
)
)
cb3d
fb3d <- plot_ly(data = fb, x = ~time, y = ~kla, z = ~oxCap,
type = "scatter3d",
mode = "lines",
line = list(
color = ~oxCap,
colorscale = "YlOrRd",
width = 9,
showscale = TRUE,
colorbar = list(
title = list(
text = "Fine bubble",
side = "right"
),
len = 0.5
)
),
showlegend = FALSE) %>%
layout(
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = "Mass transfer coefficient"),
zaxis = list(title = "Oxygenation capacity")
)
)
fb3d
combined_plot <- subplot(
ecb3d, cb3d, fb3d,
nrows = 3,  # Una fila para que estén uno al lado del otro
margin = 0.02,  # Reducir el margen entre gráficos
shareX = FALSE,  # No compartir ejes X
shareY = FALSE   # No compartir ejes Y
)
combined_plot
ecb3d <- plot_ly(data = ecb, x = ~time, y = ~kla, z = ~oxCap,
type = "scatter3d",
mode = "lines",
line = list(
color = ~oxCap,
colorscale = "Viridis",
width = 9,
showscale = TRUE,
colorbar = list(
title = list(
text = "Extra-coarse bubble",
side = "right"
),
x = -0.2,
y = 0.5,
len = 0.5
)
),
showlegend = FALSE) %>%
layout(
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = expression(ln(C[s] - C[t]))),
zaxis = list(title = "Oxygenation capacity")
)
)
cb3d <- cb %>%
plot_ly(data = ., x = ~time, y = ~kla, z = ~oxCap,
type = "scatter3d",
mode = "lines",
line = list(
color = ~oxCap,
colorscale = "Cividis",
width = 9,
showscale = TRUE,
colorbar = list(
orientation = "h",
x = 0.5,
y = 1,
len = 0.5,
title = list(
text = "Coarse bubble",
side = "top"
)
)
),
showlegend = FALSE) %>%
layout(
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = expression(ln(C[s] - C[t]))),
zaxis = list(title = "Oxygenation capacity")
)
)
fb3d <- plot_ly(data = fb, x = ~time, y = ~kla, z = ~oxCap,
type = "scatter3d",
mode = "lines",
line = list(
color = ~oxCap,
colorscale = "YlOrRd",
width = 9,
showscale = TRUE,
colorbar = list(
title = list(
text = "Fine bubble",
side = "right"
),
len = 0.5
)
),
showlegend = FALSE) %>%
layout(
scene = list(
xaxis = list(title = "Time"),
yaxis = list(title = expression(ln(C[s] - C[t]))),
zaxis = list(title = "Oxygenation capacity")
)
)
combined_plot <- subplot(
ecb3d, cb3d, fb3d,
nrows = 3,  # Una fila para que estén uno al lado del otro
margin = 0.02,  # Reducir el margen entre gráficos
shareX = FALSE,  # No compartir ejes X
shareY = FALSE   # No compartir ejes Y
)
combined_plot
install.packages("rJava", type = "source")  # Fuerza la compilación
install.packages("glmulti")
library(glmulti)  # Ahora debería funcionar
resultado_bic <- glmulti(
oxCap ~ poly(time, 8),
data = difDatos,
crit = "bic",  # ¡Más estricto!
level = 1
)
